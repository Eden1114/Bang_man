{"version":3,"sources":["boom-control.js"],"names":["cc","Class","extends","Component","properties","_dropTimeStamp","restDuration","_booming","_powerHandler","get","node","getChildByName","boomDuration","power","_state","_boomMap","_gridControl","init","require","on","onTimeStampSync","children","item","scaleX","Date","now","active","scheduleOnce","bind","e","currentTimeStamp","innerTimeStamp","detail","emit","boom","unsetBoom","getGrid","position","removeFromParent","update"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,wBAAe,IADP;AAERC,sBAAc,CAFN;AAGRC,kBAAU,KAHF;AAIRC,uBAAe;AACXC,iBAAK,eAAU;AACX,uBAAO,KAAKC,IAAL,CAAUC,cAAV,CAAyB,eAAzB,CAAP;AACH;AAHU,SAJP;AASRC,sBAAc,GATN;AAURC,eAAO,CAVC;AAWR;AACA;AACAC,gBAAQ,IAbA;AAcRC,kBAAU,IAdF;AAeRC,sBAAc;AAfN,KAHP;;AAqBL;AACAC,UAAM,gBAAY;AACd,aAAKF,QAAL,GAAgBG,QAAQ,UAAR,CAAhB;AACA,aAAKF,YAAL,GAAoBE,QAAQ,cAAR,CAApB;AACA,aAAKR,IAAL,CAAUS,EAAV,CAAa,iBAAb,EAA+B,KAAKC,eAApC,EAAoD,IAApD;;AAEA;AALc;AAAA;AAAA;;AAAA;AAMd,iCAAgB,KAAKZ,aAAL,CAAmBa,QAAnC,8HAA4C;AAAA,oBAApCC,IAAoC;;AACxCA,qBAAKC,MAAL,GAAc,KAAKV,KAAL,GAAa,GAA3B;AACH;;AAED;AAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWd,aAAKR,cAAL,GAAsBmB,KAAKC,GAAL,EAAtB;AACA;AACA,aAAKX,MAAL,GAAc,YAAd;AACA;AACA,aAAKN,aAAL,CAAmBkB,MAAnB,GAA4B,IAA5B;AACA,aAAKC,YAAL,CAAkB,YAAU;AACxB;AACA,iBAAKnB,aAAL,CAAmBkB,MAAnB,GAA4B,KAA5B;AACA,iBAAKC,YAAL,CAAkB,YAAU;AACxB;AACA,qBAAKb,MAAL,GAAc,iBAAd;AACA;AACA,qBAAKN,aAAL,CAAmBkB,MAAnB,GAA4B,IAA5B;AACH,aALiB,CAKhBE,IALgB,CAKX,IALW,CAAlB,EAKa,CALb;AAMH,SATiB,CAShBA,IATgB,CASX,IATW,CAAlB,EASa,CATb;AAUH,KAhDI;;AAkDLR,qBAAiB,yBAASS,CAAT,EAAW;AACxB,YAAIC,mBAAmB,KAAKzB,cAA5B;AACA,YAAI0B,iBAAiBF,EAAEG,MAAvB;AACA,YAAGD,iBAAiBD,gBAApB,EAAqC;AACjC,iBAAKzB,cAAL,GAAsB0B,cAAtB;AACA,iBAAKrB,IAAL,CAAUuB,IAAV,CAAe,iBAAf,EAAiCF,cAAjC;AACH;AAEJ,KA1DI;;AA4DLG,UAAM,gBAAU;AACZ;AACA,aAAKpB,MAAL,GAAc,SAAd;AACA,aAAKJ,IAAL,CAAUuB,IAAV,CAAe,MAAf;AACA,aAAKN,YAAL,CAAkB,YAAU;AACZ;AACA,iBAAKZ,QAAL,CAAcoB,SAAd,CAAwB,KAAKnB,YAAL,CAAkBoB,OAAlB,CAA0B,KAAK1B,IAAL,CAAU2B,QAApC,CAAxB;AACA,iBAAK3B,IAAL,CAAU4B,gBAAV;AACf,SAJiB,CAIhBV,IAJgB,CAIX,IAJW,CAAlB,EAIa,KAAKhB,YAJlB;AAKH,KArEI;AAsEL2B,YAAQ,kBAAU;AACd;AACA,YAAI,KAAKlC,cAAL,GAAsB,KAAKC,YAAL,GAAoB,IAA3C,IAAoDkB,KAAKC,GAAL,EAAvD,EAAkE;AAC9D;AACA,gBAAG,CAAC,KAAKlB,QAAT,EAAkB;AACd,qBAAKA,QAAL,GAAgB,IAAhB;AACA,qBAAK2B,IAAL;AACH;AACJ;AACJ;;AA/EI,CAAT","file":"boom-control.js","sourceRoot":"../../../../assets/script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _dropTimeStamp:null,\n        restDuration: 3,\n        _booming: false,\n        _powerHandler: {\n            get: function(){\n                return this.node.getChildByName('power-handler');\n            }\n        },\n        boomDuration: 0.2,\n        power: 3,\n        //power-init state\n        //time-stamp-init state\n        _state: null,\n        _boomMap: null,\n        _gridControl: null,\n    },\n    \n    //design the way to get the grid position of player\n    init: function () {\n        this._boomMap = require('boom-map');\n        this._gridControl = require('grid-control');\n        this.node.on('time-stamp-sync',this.onTimeStampSync,this);\n\n        //初始化威力scale\n        for(let item of this._powerHandler.children){\n            item.scaleX = this.power + 0.4;\n        }\n\n        //炮弹被放下后 会马上记录当前的时间戳\n        this._dropTimeStamp = Date.now();\n        //炮弹距离初始化状态\n        this._state = 'power-init';\n        //开启碰撞检测 修正炮弹威力\n        this._powerHandler.active = true;\n        this.scheduleOnce(function(){\n            //重置碰撞\n            this._powerHandler.active = false;\n            this.scheduleOnce(function(){\n                //炮弹时间初始化状态\n                this._state = 'time-stamp-init';\n                //[error]重新开启碰撞 同步炮弹爆炸时间\n                this._powerHandler.active = true;\n            }.bind(this),0)\n        }.bind(this),0);\n    }, \n\n    onTimeStampSync: function(e){\n        let currentTimeStamp = this._dropTimeStamp;\n        let innerTimeStamp = e.detail;\n        if(innerTimeStamp < currentTimeStamp){\n            this._dropTimeStamp = innerTimeStamp;\n            this.node.emit('time-stamp-sync',innerTimeStamp);\n        }\n        \n    },\n\n    boom: function(){\n        //渲染炮弹威力\n        this._state = 'booming';\n        this.node.emit('boom');\n        this.scheduleOnce(function(){\n                        //指定时间后 炮弹自动销毁↓\n                        this._boomMap.unsetBoom(this._gridControl.getGrid(this.node.position));\n                        this.node.removeFromParent();\n        }.bind(this),this.boomDuration);\n    },\n    update: function(){\n        //然后在update判断是否到达了要爆炸的时间\n        if((this._dropTimeStamp + this.restDuration * 1000) <= Date.now()){\n            //boom\n            if(!this._booming){\n                this._booming = true;\n                this.boom();\n            }\n        }\n    }\n\n    \n\n});\n"]}