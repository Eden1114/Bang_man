{"version":3,"sources":["boom-drop-control.js"],"names":["cc","Class","extends","Component","properties","boomPrefabArray","Prefab","groundPanel","Node","_gridControl","_boomMap","dropAudio","default","url","AudioClip","_button","onLoad","systemEvent","on","onKeyDown","require","e","keyCode","KEY","space","audioEngine","playEffect","dropBoom","grid","getGrid","node","position","isBoomSet","setBoom","boomIdx","Math","floor","random","length","boom","instantiate","addChild","getGridPosition","getComponent","init","zIndex","dropBoomByButton"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,yBAAiB,CAACL,GAAGM,MAAJ,CAFT;AAGRC,qBAAaP,GAAGQ,IAHR;AAIRC,sBAAc,IAJN;AAKRC,kBAAU,IALF;AAMRC,mBAAW;AACPC,qBAAS,IADF;AAEPC,iBAAKb,GAAGc;AAFD,SANH;AAURC,iBAAQf,GAAGQ;AAVH,KAHP;;AAgBLQ,YAAQ,kBAAY;AAChBhB,WAAGiB,WAAH,CAAeC,EAAf,CAAkB,SAAlB,EAA4B,KAAKC,SAAjC,EAA2C,IAA3C,GACA,KAAKV,YAAL,GAAoBW,QAAQ,cAAR,CADpB;AAEA,aAAKV,QAAL,GAAgBU,QAAQ,UAAR,CAAhB;AACH,KApBI;;AAsBLD,eAAW,mBAASE,CAAT,EAAW;AAClB,YAAGA,EAAEC,OAAF,IAAatB,GAAGuB,GAAH,CAAOC,KAAvB,EAA8B;AAC1BxB,eAAGyB,WAAH,CAAeC,UAAf,CAA0B,KAAKf,SAA/B,EAA0C,KAA1C;AACA,iBAAKgB,QAAL;AACH;AACJ,KA3BI;AA4BL;AACAA,cAAU,oBAAW;AACjB,YAAIC,OAAO,KAAKnB,YAAL,CAAkBoB,OAAlB,CAA0B,KAAKC,IAAL,CAAUC,QAApC,CAAX;AACA,YAAG,KAAKrB,QAAL,CAAcsB,SAAd,CAAwBJ,IAAxB,CAAH,EAAiC;AAAC;AAAQ;AAC1C,aAAKlB,QAAL,CAAcuB,OAAd,CAAsBL,IAAtB;AACA,YAAIM,UAAUC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,KAAKhC,eAAL,CAAqBiC,MAAhD,CAAd;AACA,YAAIC,OAAOvC,GAAGwC,WAAH,CAAe,KAAKnC,eAAL,CAAqB6B,OAArB,CAAf,CAAX;AACA,aAAK3B,WAAL,CAAiBkC,QAAjB,CAA0BF,IAA1B;AACA;AACA;AACAA,aAAKR,QAAL,GAAgB,KAAKtB,YAAL,CAAkBiC,eAAlB,CAAkC,KAAKZ,IAAL,CAAUC,QAA5C,CAAhB;AACAQ,aAAKI,YAAL,CAAkB,cAAlB,EAAkCC,IAAlC;AACAL,aAAKM,MAAL,GAAc,KAAKf,IAAL,CAAUe,MAAV,GAAmB,CAAjC;AACH,KAzCI;;AA2CLC,oBA3CK,8BA2Cc;AACf9C,WAAGyB,WAAH,CAAeC,UAAf,CAA0B,KAAKf,SAA/B,EAA0C,KAA1C;AACA,aAAKgB,QAAL;AACH;AA9CI,CAAT","file":"boom-drop-control.js","sourceRoot":"../../../../assets/script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //boomPrefab: cc.Prefab,\n        boomPrefabArray: [cc.Prefab],\n        groundPanel: cc.Node,\n        _gridControl: null,\n        _boomMap: null,\n        dropAudio: {\n            default: null,\n            url: cc.AudioClip\n        },\n        _button:cc.Node,\n    },\n\n    onLoad: function () {\n        cc.systemEvent.on('keydown',this.onKeyDown,this),\n        this._gridControl = require('grid-control');\n        this._boomMap = require('boom-map');\n    },\n\n    onKeyDown: function(e){\n        if(e.keyCode == cc.KEY.space) {\n            cc.audioEngine.playEffect(this.dropAudio, false);\n            this.dropBoom();\n        }\n    },\n    //[fix] design the way the cal the grid position and drop the boom in the center of grid\n    dropBoom: function() {\n        let grid = this._gridControl.getGrid(this.node.position);\n        if(this._boomMap.isBoomSet(grid)){return;}\n        this._boomMap.setBoom(grid);\n        let boomIdx = Math.floor(Math.random() * this.boomPrefabArray.length);\n        let boom = cc.instantiate(this.boomPrefabArray[boomIdx]);\n        this.groundPanel.addChild(boom);\n        //[add] set grid position of boom\n        //boom.position = this.node.position;\n        boom.position = this._gridControl.getGridPosition(this.node.position);\n        boom.getComponent('boom-control').init();\n        boom.zIndex = this.node.zIndex - 1;\n    },\n\n    dropBoomByButton() {\n        cc.audioEngine.playEffect(this.dropAudio, false);\n        this.dropBoom();\n    }\n\n});\n"]}