{"version":3,"sources":["power-control.js"],"names":["cc","Class","extends","Component","properties","boomControl","require","_gridControl","_preBoomArray","onLoad","manager","director","getCollisionManager","enabled","node","on","onBoom","getComponent","Sprite","item","checkGrid","emit","onCollisionEnter","other","self","state","_state","group","otherGrid","getGrid","position","selfGrid","scaleX","Math","abs","x","y","_dropTimeStamp","preBoomIndex","name","otherNode","onCollisionExit","undefined"],"mappings":"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","file":"power-control.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       boomControl: require('boom-control'),\r\n       _gridControl: null,\r\n       _preBoomArray: [],\r\n    },\r\n\r\n    onLoad: function () {\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n        this._gridControl = require('grid-control');\r\n\r\n        \r\n        this.boomControl.node.on('boom',this.onBoom,this)\r\n    },\r\n\r\n    onBoom: function(){\r\n        this.getComponent(cc.Sprite).enabled = true;\r\n        //console.log(this._preBoomArray);\r\n        for(let item in this._preBoomArray){\r\n            //console.log(item);\r\n            if(this.checkGrid(this._preBoomArray[item])){\r\n                this._preBoomArray[item].emit('hurt-by-power');\r\n            }\r\n        }\r\n    },\r\n\r\n   \r\n\r\n    onCollisionEnter: function(other,self){\r\n        let state = this.boomControl._state;\r\n        if(other.node.group == 'static-wall' && state == 'power-init'){\r\n            let otherGrid = this._gridControl.getGrid(other.node.position);\r\n            let selfGrid = this._gridControl.getGrid(this.boomControl.node.position);\r\n            let scaleX = Math.abs(otherGrid.x - selfGrid.x) + Math.abs(otherGrid.y - selfGrid.y);\r\n            if(scaleX <= this.node.scaleX){\r\n                //一帧过后 威力会回退到墙壁前\r\n                this.node.scaleX = scaleX - 0.6;\r\n            }\r\n        }else if(other.node.group == 'boom' && state == 'time-stamp-init'){\r\n            //一帧过后，所有关联的炮弹会同步爆炸时间\r\n            other.node.emit('time-stamp-sync',this.boomControl._dropTimeStamp);\r\n        }else if(other.node.group == 'player' && state == 'time-stamp-init'){\r\n            //other.node.emit('hurt-by-power');\r\n            other.preBoomIndex = other.node.name;//Date.now();\r\n            this._preBoomArray[other.preBoomIndex] = other.node;\r\n        }else if(other.node.group == 'player' && state == 'booming'){\r\n            // if(other.preBoomIndex == undefined){\r\n                if(this.checkGrid(other.node)){\r\n                     other.node.emit('hurt-by-power');\r\n                }\r\n            // }\r\n        }\r\n        \r\n    },\r\n\r\n    checkGrid: function(otherNode){\r\n        let otherGrid = this._gridControl.getGrid(otherNode.position);\r\n        let selfGrid = this._gridControl.getGrid(this.boomControl.node.position);\r\n        if(otherGrid.x == selfGrid.x || otherGrid.x == selfGrid.y || otherGrid.y == selfGrid.x || otherGrid.y == selfGrid.y){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    },\r\n    \r\n\r\n    onCollisionExit: function(other,self){\r\n        let state = this.boomControl._state;\r\n        if(other.node.group == 'player' && state == 'time-stamp-init'){\r\n            if(other.preBoomIndex != undefined){\r\n                delete this._preBoomArray[other.preBoomIndex];\r\n            }\r\n        }\r\n    },\r\n\r\n});\r\n"]}