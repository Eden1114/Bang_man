{"version":3,"sources":["player-control.js"],"names":["cc","Class","extends","Component","properties","hp","realPlayer","hurtValue","_hpLabel","get","node","getChildByName","getComponent","Label","_sceneLoading","hurtDurationOfEnemyTouch","_hurtTimeStamp","_enemyRemoving","_gridControl","onLoad","require","Date","now","string","on","onHurt","manager","director","getCollisionManager","enabled","onCollisionStay","other","self","group","checkGridTouch","otherNode","selfNode","otherGrid","getGrid","position","selfGrid","x","y","loadScene","window","enemyNum","yourgrade","removeFromParent"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,YAAI,GADI,EACI;AACZC,oBAAY,KAFJ;AAGRC,mBAAW,CAHH,EAGQ;AAChBC,kBAAU;AACNC,iBAAK,eAAY;AACb,uBAAO,KAAKC,IAAL,CAAUC,cAAV,CAAyB,SAAzB,EAAoCC,YAApC,CAAiDZ,GAAGa,KAApD,CAAP;AACH;AAHK,SAJF,EAQJ;;AAEJC,uBAAe,KAVP;AAWRC,kCAA0B,GAXlB,EAWwB;AAChCC,wBAAgB,IAZR;AAaRC,wBAAgB,KAbR;AAcRC,sBAAc;AAdN,KAHP;;AAoBLC,YAAQ,kBAAY;;AAEhB,aAAKD,YAAL,GAAoBE,QAAQ,cAAR,CAApB;AACA,aAAKJ,cAAL,GAAsBK,KAAKC,GAAL,EAAtB;;AAEA,aAAKd,QAAL,CAAce,MAAd,GAAuB,KAAKlB,EAA5B,CALgB,CAKgB;;AAEhC,aAAKK,IAAL,CAAUc,EAAV,CAAa,eAAb,EAA8B,KAAKC,MAAnC,EAA2C,IAA3C,EAPgB,CAOoC;;AAEpD;AACA,YAAIC,UAAU1B,GAAG2B,QAAH,CAAYC,mBAAZ,EAAd;AACAF,gBAAQG,OAAR,GAAkB,IAAlB;AACA;AACA;AACA;AACH,KAnCI;;AAqCL;;;;;AAKAC,qBAAiB,yBAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACpC,YAAI,KAAK1B,UAAL,IAAmByB,MAAMrB,IAAN,CAAWuB,KAAX,IAAoB,QAA3C,EAAqD;AACjD;AACA,gBAAI,KAAKC,cAAL,CAAoBH,MAAMrB,IAA1B,EAAgCsB,KAAKtB,IAArC,CAAJ,EAAgD;AAC5C,oBAAI,KAAKM,cAAL,GAAsB,KAAKD,wBAAL,GAAgC,IAAtD,IAA8DM,KAAKC,GAAL,EAAlE,EAA8E;AAC1E,yBAAKG,MAAL;AACA,yBAAKT,cAAL,GAAsBK,KAAKC,GAAL,EAAtB;AACH;AACJ;AACJ;AACJ,KApDI;;AAsDL;AACAY,oBAAgB,wBAAUC,SAAV,EAAqBC,QAArB,EAA+B;AAC3C,YAAIC,YAAY,KAAKnB,YAAL,CAAkBoB,OAAlB,CAA0BH,UAAUI,QAApC,CAAhB;AACA,YAAIC,WAAW,KAAKtB,YAAL,CAAkBoB,OAAlB,CAA0BF,SAASG,QAAnC,CAAf;;AAEA,YAAIF,UAAUI,CAAV,IAAeD,SAASC,CAAxB,IAA6BJ,UAAUK,CAAV,IAAeF,SAASE,CAAzD,EAA4D;AACxD,mBAAO,IAAP;AACH,SAFD,MAEO;AACH,mBAAO,KAAP;AACH;AACJ,KAhEI;;AAmEL;AACAjB,YAAQ,kBAAY;AAChB,aAAKpB,EAAL,IAAW,KAAKE,SAAhB;AACA,YAAI,KAAKF,EAAL,IAAW,CAAf,EAAkB;AACd,gBAAI,KAAKC,UAAT,EAAqB;AACjB;AACA,oBAAI,CAAC,KAAKQ,aAAV,EAAyB;AACrB,yBAAKA,aAAL,GAAqB,IAArB;AACAd,uBAAG2B,QAAH,CAAYgB,SAAZ,CAAsB,iBAAtB;AACH;AACJ,aAND,MAMO;AACH;AACA,oBAAI,CAAC,KAAK1B,cAAV,EAA0B;AACtB,yBAAKA,cAAL,GAAsB,IAAtB;AACA2B,2BAAOC,QAAP;AACAD,2BAAOE,SAAP,IAAkB,GAAlB;AACA,yBAAKpC,IAAL,CAAUqC,gBAAV;AACH;AACJ;AACJ,SAhBD,MAgBO;AACH,iBAAKvC,QAAL,CAAce,MAAd,GAAuB,KAAKlB,EAA5B;AACH;AAEJ;;AA1FI,CAAT","file":"player-control.js","sourceRoot":"../../../../assets/script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        hp: 100,    //当前剩余的血量\n        realPlayer: false,\n        hurtValue: 5,   //受伤害时，扣除的hp量\n        _hpLabel: {\n            get: function () {\n                return this.node.getChildByName('hp-tips').getComponent(cc.Label);\n            }\n        },  //用于放置血量的label\n\n        _sceneLoading: false,\n        hurtDurationOfEnemyTouch: 0.5,  //just use in enemy\n        _hurtTimeStamp: null,\n        _enemyRemoving: false,\n        _gridControl: null,\n    },\n\n    onLoad: function () {\n\n        this._gridControl = require('grid-control');\n        this._hurtTimeStamp = Date.now();\n\n        this._hpLabel.string = this.hp; //设置hp\n\n        this.node.on('hurt-by-power', this.onHurt, this);   //收到伤害时执行的函数\n\n        //获取碰撞检测系统\n        let manager = cc.director.getCollisionManager();\n        manager.enabled = true;\n        //FOR DEGUB\n        // manager.enabledDebugDraw = true;\n        // manager.enabledDrawBoundingBox = true;\n    },\n\n    /**\n     * 当碰撞保持的时候调用\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionStay: function (other, self) {\n        if (this.realPlayer && other.node.group == 'player') {\n            //[add] check the grid\n            if (this.checkGridTouch(other.node, self.node)) {\n                if (this._hurtTimeStamp + this.hurtDurationOfEnemyTouch * 1000 <= Date.now()) {\n                    this.onHurt();\n                    this._hurtTimeStamp = Date.now();\n                }\n            }\n        }\n    },\n\n    //判断两个spirte是否在一个格子内\n    checkGridTouch: function (otherNode, selfNode) {\n        let otherGrid = this._gridControl.getGrid(otherNode.position);\n        let selfGrid = this._gridControl.getGrid(selfNode.position);\n\n        if (otherGrid.x == selfGrid.x && otherGrid.y == selfGrid.y) {\n            return true;\n        } else {\n            return false;\n        }\n    },\n\n\n    // 受到伤害时\n    onHurt: function () {\n        this.hp -= this.hurtValue;\n        if (this.hp <= 0) {\n            if (this.realPlayer) {\n                //game over\n                if (!this._sceneLoading) {\n                    this._sceneLoading = true;\n                    cc.director.loadScene('game-over-scene');\n                }\n            } else {\n                //enemy removed\n                if (!this._enemyRemoving) {\n                    this._enemyRemoving = true;\n                    window.enemyNum--;\n                    window.yourgrade+=100;\n                    this.node.removeFromParent();\n                }\n            }\n        } else {\n            this._hpLabel.string = this.hp;\n        }\n\n    }\n\n});\n"]}