{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\move-control.js"],"names":["cc","Class","extends","Component","properties","_left","_right","_up","_down","moveSpeed","_leftBlock","_rightBlock","_upBlock","_downBlock","realPlayer","_player","onLoad","systemEvent","on","onKeyDown","onKeyUp","node","parent","getChildByName","manager","director","getCollisionManager","enabled","onCollisionEnter","other","self","group","onTouchWall","onCollisionExit","onLeaveWall","blockArray","selfAabb","world","aabb","otherAabb","selfPreAabb","preAabb","otherPreAabb","xMin","xMax","distance","Math","abs","push","direction","yMax","yMin","undefined","name","item","blockName","e","keyCode","KEY","up","down","left","scaleX","children","right","update","dt","targetVector","pSub","position","moveStep","pMult","pNormalize","x","y","pAdd"],"mappings":"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","file":"move-control.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        _left: false,\r\n        _right: false,\r\n        _up: false,\r\n        _down: false,\r\n\r\n        moveSpeed: 0,\r\n\r\n        _leftBlock : 0,\r\n        _rightBlock : 0,\r\n        _upBlock : 0,\r\n        _downBlock : 0,\r\n\r\n        realPlayer: false,\r\n        _player: null,\r\n    },\r\n\r\n    onLoad: function () {\r\n        if(this.realPlayer){\r\n        //移动很简单  首先开启按键的监听↓\r\n            cc.systemEvent.on('keydown',this.onKeyDown,this);\r\n            cc.systemEvent.on('keyup',this.onKeyUp,this);\r\n        }else{\r\n            this._player = this.node.parent.getChildByName('player');\r\n        }\r\n        //碰撞也很简单 首先开始碰撞回调↓\r\n        let manager = cc.director.getCollisionManager();\r\n        manager.enabled = true;\r\n    },\r\n\r\n    onCollisionEnter: function(other,self){\r\n        if(other.node.group == 'static-wall' || other.node.group == 'boom'){\r\n            //如果碰撞的分组是墙壁 调用↓\r\n            this.onTouchWall(other,self);\r\n        }\r\n    },\r\n\r\n    onCollisionExit: function(other,self){\r\n        if(other.node.group == 'static-wall' || other.node.group == 'boom'){\r\n            //离开墙壁的时候，记得解除碰撞的标志位↓\r\n            this.onLeaveWall(other,self);\r\n        }\r\n    },\r\n\r\n    onTouchWall: function(other,self){\r\n        //check the preAabb and aabb\r\n        \r\n        let blockArray = [];\r\n        //aabb是碰撞发生后嵌入墙壁的包围盒↓\r\n        let selfAabb = self.world.aabb;\r\n        let otherAabb = other.world.aabb;\r\n        //preAabb是碰撞发生前一帧，未碰撞 还在墙壁外的包围盒↓\r\n        let selfPreAabb = self.world.preAabb;\r\n        let otherPreAabb = other.world.preAabb;\r\n\r\n        //preAabb not touch by aabb touch => the edge blockArray\r\n\r\n        //check left block\r\n        //判断碰撞确实发生的思路是： preAabb的时候某边未嵌入墙壁 但是aabb的时候这个边已经嵌入了墙壁\r\n        //就说明 这preAabb到aabb这个切换过程中，这个边确实碰到了墙壁\r\n        //上下左右四个边都判断一次\r\n        if(selfPreAabb.xMin >= otherAabb.xMax && selfAabb.xMin <= otherAabb.xMax){\r\n            //left block\r\n            let distance = Math.abs(otherAabb.xMax - selfPreAabb.xMin);\r\n            //然后就保存碰撞的边\r\n            blockArray.push({distance: distance, direction: 'left'});\r\n        }\r\n        //check right block\r\n        if(selfPreAabb.xMax <= otherAabb.xMin && selfAabb.xMax >= otherAabb.xMin){\r\n            //right block\r\n            let distance = Math.abs(otherAabb.xMin - selfPreAabb.xMax);\r\n            blockArray.push({distance: distance, direction: 'right'});\r\n        }\r\n        //check up block\r\n        if(selfPreAabb.yMax <= otherAabb.yMin && selfAabb.yMax >= otherAabb.yMin){\r\n            //up block\r\n            let distance = Math.abs(otherAabb.yMin - selfPreAabb.yMax);\r\n            blockArray.push({distance: distance, direction: 'up'});\r\n        }\r\n        //check down block\r\n        if(selfPreAabb.yMin >= otherAabb.yMax && selfAabb.yMin <= otherAabb.yMax){\r\n            //down block\r\n            let distance = Math.abs(otherAabb.yMax - selfPreAabb.yMin);\r\n            blockArray.push({distance: distance, direction: 'down'});\r\n        }\r\n        //让墙壁帮我们保存碰撞的数组\r\n        if(other.blockArray == undefined){other.blockArray = {};}\r\n        other.blockArray[self.node.name] = blockArray;\r\n\r\n        //遍历碰撞的数组 设置碰撞的标志位\r\n        for(let item of blockArray){\r\n            let blockName = '_' + item.direction + \"Block\";\r\n            this[blockName] += 1;\r\n        }\r\n    },\r\n\r\n    onLeaveWall: function(other,self){\r\n        //和touchWall部分同理\r\n        if(other.blockArray !== undefined && other.blockArray[self.node.name] !== undefined){\r\n            for(let item of other.blockArray[self.node.name]){\r\n                let blockName = '_' + item.direction + 'Block';\r\n                //不过这次是解除\r\n                this[blockName] -= 1;\r\n            }\r\n            //然后清空碰撞数组\r\n            other.blockArray[self.node.name] = [];\r\n        }\r\n    },\r\n\r\n    onKeyDown: function(e){\r\n        //在按下的时候设置方向标志位↓\r\n        switch(e.keyCode){\r\n            case cc.KEY.up: {this._up = true;break}\r\n            case cc.KEY.down: {this._down = true;break}\r\n            case cc.KEY.left: {this._left = true;this.node.scaleX = -1;this.node.children[0].scaleX = -1;break}\r\n            case cc.KEY.right: {this._right = true;this.node.scaleX = 1;this.node.children[0].scaleX = 1;break}\r\n        }\r\n    },\r\n\r\n    onKeyUp: function(e){\r\n        //在弹起的时候解除方向标志位↓\r\n        switch(e.keyCode){\r\n            case cc.KEY.up: {this._up = false;break}\r\n            case cc.KEY.down: {this._down = false;break}\r\n            case cc.KEY.left: {this._left = false;break}\r\n            case cc.KEY.right: {this._right = false;break}\r\n        }    \r\n    },\r\n\r\n    update: function(dt){\r\n        //然后根据标志位移动玩家\r\n        //能够移动的判断标准是  想往某个方向移动并且那个方向畅通无阻 才能移动\r\n        if(!this.realPlayer){\r\n            //计算玩家位置并不断追逐\r\n            let targetVector = cc.pSub(this._player.position,this.node.position);\r\n            let moveStep = cc.pMult(cc.pNormalize(targetVector),this.moveSpeed);\r\n            if(moveStep.x > 0 && !!this._rightBlock){moveStep.x = 0;}\r\n            if(moveStep.x < 0 && !!this._leftBlock){moveStep.x = 0;}\r\n            if(moveStep.y > 0 && !!this._upBlock){moveStep.y = 0;}\r\n            if(moveStep.y < 0 && !!this._downBlock){moveStep.y = 0;}\r\n            if(moveStep.x > 0){this.node.scaleX = 1;this.node.children[0].scaleX = 1;}\r\n            if(moveStep.x < 0){this.node.scaleX = -1;this.node.children[0].scaleX = -1;}\r\n            this.node.position = cc.pAdd(this.node.position,moveStep);\r\n        }else{\r\n\r\n            if(this._left && !this._leftBlock){this.node.x -= this.moveSpeed}\r\n            if(this._right && !this._rightBlock){this.node.x += this.moveSpeed}\r\n            if(this._up && !this._upBlock){this.node.y += this.moveSpeed}\r\n            if(this._down && !this._downBlock){this.node.y -= this.moveSpeed}\r\n        }\r\n    }\r\n});\r\n"]}